{"version":3,"sources":["services/api.js","store/actions/counters.js","store/reducers/counters.js","store/reducers/index.js","components/counter-add-form/index.js","components/counter-item/index.js","components/counter-filter/index.js","components/counter-list/index.js","containers/body/index.js","root/index.js","serviceWorker.js","index.js"],"names":["request","axios","create","baseURL","concat","process","defaults","headers","post","api","getCounters","get","then","data","addCounter","title","increaseCounter","idCounter","id","decreaseCounter","removeCounter","delete","dispatch","getState","type","apiService","payload","sort","orderBy","counters","catch","err","setCounter","arguments","length","undefined","map","item","count","filter","setOrder","a","b","genreA","toUpperCase","genreB","comparison","initialState","isLoading","error","hasError","success","counterReduce","state","action","Object","objectSpread","reducers","combineReducers","CounterAddForm","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","bind","assertThisInitialized","handleSubmit","e","setState","target","value","preventDefault","onSubmit","react_default","createElement","className","class","htmlFor","name","onChange","index_esm","React","Component","CounterItem","_this$props","disabled","onDecrease","onIncrease","onRemove","onClick","CounterFilter","filterValue","rule","CounterList","getTotalCounts","total","getFilteredData","forEach","_this$state","filterRules","indexRule","countersState","indexOf","parseInt","activeToggle","index","_this2","_this$state2","onAdd","onOrder","onDecreaseItem","onIncreaseItem","onRemoveItem","counter_filter","searchPhrase","classNames","counter-list__toggle-filter--active","key","handleChangeFiltrerRule","active","counter_item","Body","handleAddCounter","handleCloseForm","handleIncrease","handleDecrease","handleRemove","handleOrderBy","handleOpenForm","openForm","simple_modal_default","show","onClose","containerClassName","counter_add_form","counter_list","connect","store","createStore","applyMiddleware","thunk","logger","Root","es","body","Boolean","window","location","hostname","match","ReactDOM","render","root","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.28d436ed.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst request = axios.create({\n  baseURL: `${process.env.REACT_APP_API_BASE_URL}/api/v1`,\n});\n\nrequest.defaults.headers.post['Accept'] = 'application/json';\nrequest.defaults.headers.post['Content-Type'] = 'application/json';\n\nexport const getCounters = () => {\n  return request\n    .get('/counters')\n    .then(data => data.data);\n}\n\nexport const addCounter = (title) => {\n  return request\n    .post('/counter', { title })\n    .then(data => data.data);\n}\n\nexport const increaseCounter = (idCounter) => {\n  return request\n    .post('/counter/inc', {id: idCounter})\n    .then(data => data.data);\n}\n\nexport const decreaseCounter = (idCounter) => {\n  return request\n    .post('/counter/dec', {id: idCounter})\n    .then(data => data.data);\n}\n\nexport const removeCounter = (idCounter) => {\n  return request\n    .delete('/counter', {\n      data: {id: idCounter}\n    })\n    .then(data => data.data);\n}\n\nexport default {\n  getCounters,\n  addCounter,\n  increaseCounter,\n  decreaseCounter,\n  removeCounter,\n};","import apiService from '../../services/api';\n\nexport const FETCH_COUNTERS = \"FETCH_COUNTERS\";\nexport const FETCH_COUNTERS_ERROR = \"FETCH_COUNTERS_ERROR\";\nexport const FETCH_COUNTERS_SUCCESS = \"FETCH_COUNTERS_SUCCESS\";\n\nexport const ADD_COUNTER = \"ADD_COUNTER\";\nexport const ADD_COUNTER_ERROR = \"ADD_COUNTER_ERROR\";\nexport const ADD_COUNTER_SUCCESS = \"ADD_COUNTER_SUCCESS\";\n\nexport const SET_COUNTER = \"SET_COUNTER\";\nexport const SET_COUNTER_ERROR = \"SET_COUNTER_ERROR\";\nexport const SET_COUNTER_SUCCESS = \"SET_COUNTER_SUCCESS\";\n\nexport const REMOVE_COUNTER = \"REMOVE_COUNTER\";\nexport const REMOVE_COUNTER_ERROR = \"REMOVE_COUNTER_ERROR\";\nexport const REMOVE_COUNTER_SUCCESS = \"REMOVE_COUNTER_SUCCESS\";\n\nexport const SET_ORDER = \"SET_ORDER\";\n\nexport const getCounters = () => {\n  return (dispatch, getState) => {\n    dispatch({\n      type: FETCH_COUNTERS\n    });\n    apiService.getCounters()\n      .then(data => dispatch({\n        type: FETCH_COUNTERS_SUCCESS,\n        payload: data.sort(orderBy(getState().counters.orderBy)),\n      }))\n      .catch(err => dispatch({\n        type: FETCH_COUNTERS_ERROR,\n        payload: err\n      }))\n  }\n}\n\nexport const addCounter = title => {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ADD_COUNTER\n    });\n    apiService.addCounter(title)\n      .then(data => dispatch({\n        type: ADD_COUNTER_SUCCESS,\n        payload: getState().counters.data.concat(data).sort(orderBy(getState().counters.orderBy)),\n      }))\n      .catch(err => dispatch({\n        type: ADD_COUNTER_ERROR,\n        payload: err\n      }))\n  }\n}\n\nexport const setCounter = (idCounter, type = 'increase') => {\n  return (dispatch, getState) => {\n    dispatch({\n      type: SET_COUNTER\n    });\n    apiService[`${type}Counter`](idCounter)\n      .then(data => dispatch({\n        type: SET_COUNTER_SUCCESS,\n        payload: getState().counters.data.map(item => {\n          if (item.id === data.id) {\n            item.count = data.count\n          }\n          return item;\n        }).sort(orderBy(getState().counters.orderBy)),\n      }))\n      .catch(err => dispatch({\n        type: SET_COUNTER_ERROR,\n        payload: err\n      }))\n  }\n}\n\nexport const removeCounter = idCounter => {\n  return (dispatch, getState) => {\n    dispatch({\n      type: REMOVE_COUNTER\n    });\n    apiService.removeCounter(idCounter)\n      .then(id => dispatch({\n        type: REMOVE_COUNTER_SUCCESS,\n        payload: getState().counters.data.filter(item => item.id !== id).sort(orderBy(getState().counters.orderBy)),\n      }))\n      .catch(err => dispatch({\n        type: REMOVE_COUNTER_ERROR,\n        payload: err\n      }))\n  }\n}\n\nexport const setOrder = (type = 'title') => {\n  return (dispatch, getState) => {\n    const counters = getState().counters.data;\n\n    return dispatch({\n      type: SET_ORDER,\n      payload: {\n        orderBy: type,\n        data: counters.sort(orderBy(type)),\n      },\n    });\n  }\n}\n\nconst orderBy = type => (a, b) => {\n  const genreA = typeof a[type] === 'string' ? a[type].toUpperCase() : a[type];\n  const genreB = typeof b[type] === 'string' ? b[type].toUpperCase() : b[type];\n  \n  let comparison = 0;\n  if (genreA > genreB) {\n    comparison = 1;\n  } else if (genreA < genreB) {\n    comparison = -1;\n  }\n  return comparison;\n}","import {\n  FETCH_COUNTERS,\n  FETCH_COUNTERS_ERROR,\n  FETCH_COUNTERS_SUCCESS,\n  ADD_COUNTER,\n  ADD_COUNTER_ERROR,\n  ADD_COUNTER_SUCCESS,\n  SET_COUNTER,\n  SET_COUNTER_ERROR,\n  SET_COUNTER_SUCCESS,\n  REMOVE_COUNTER,\n  REMOVE_COUNTER_ERROR,\n  REMOVE_COUNTER_SUCCESS,\n  SET_ORDER,\n} from './../actions/counters';\n\nconst initialState = {\n  data: [],\n  isLoading: false,\n  error: null,\n  hasError: false,\n  success: false,\n  orderBy: 'title',\n};\n\nconst counterReduce = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_COUNTERS:\n      return {\n        ...state,\n        isLoading: true,\n        hasError: false,\n        error: null,\n      };\n    case FETCH_COUNTERS_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        hasError: true,\n        error: action.payload,\n      };\n    case FETCH_COUNTERS_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        data: action.payload,\n      };\n    case ADD_COUNTER:\n      return {\n        ...state,\n        isLoading: true,\n        hasError: false,\n        error: null,\n      };\n    case ADD_COUNTER_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        hasError: true,\n        error: action.payload,\n      };\n    case ADD_COUNTER_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        data: action.payload,\n      };\n    case SET_COUNTER:\n      return {\n        ...state,\n        isLoading: true,\n        hasError: false,\n        error: null,\n      };\n    case SET_COUNTER_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        hasError: true,\n        error: action.payload,\n      };\n    case SET_COUNTER_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        data: action.payload,\n      };\n    case REMOVE_COUNTER:\n      return {\n        ...state,\n        isLoading: true,\n        hasError: false,\n        error: null,\n      };\n    case REMOVE_COUNTER_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        hasError: true,\n        error: action.payload,\n      };\n    case REMOVE_COUNTER_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        data: action.payload,\n      };\n    case SET_ORDER:\n      return {\n        ...state,\n        orderBy: action.payload.orderBy,\n        data: action.payload.data,\n      };\n    default:\n      return state;\n  };\n};\n\nexport default counterReduce;","import { combineReducers } from 'redux';\nimport counters from './counters';\n\nconst reducers = combineReducers({\n  counters,\n});\n\nexport default reducers;","import React from 'react';\nimport { MdAdd } from 'react-icons/md';\nimport './style.scss';\n\nclass CounterAddForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({ title: e.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onSubmit(this.state.title);\n    this.setState({ title: '' });\n  }\n\n  render() {\n    const { title } = this.state;\n\n     return (\n       <div className=\"counter-add-form\">\n          <h2 className=\"counter-add-form__title\">Nuevo contador</h2>\n          <form action=\"#\" class=\"counter-add-form__inner\" onSubmit={this.handleSubmit}>\n            <div className=\"counter-add-form__group\">\n              <label htmlFor=\"title\">Nombre</label>\n              <input type=\"text\" name=\"title\" id=\"title\" value={title} onChange={this.handleChange}/>\n            </div>\n            <button class=\"btn-circle\" type=\"submit\">\n              <MdAdd />\n            </button>\n          </form>\n        </div>\n    );\n  }\n}\n\nexport default CounterAddForm;","import React from 'react';\nimport {\n  MdAdd,\n  MdRemove,\n  MdDeleteForever\n} from 'react-icons/md';\nimport './style.scss';\n\nclass CounterItem extends React.Component {\n  render() {\n    const { data, disabled, onDecrease, onIncrease, onRemove } = this.props;\n\n    return (\n      <div className=\"counter-item\">\n        <div className=\"counter-item__cel\">\n          <p className=\"counter-item__label\">{data.title}</p>\n        </div>\n        <div className=\"counter-item__cel\">\n          <p className=\"counter-item__label\">{data.count}</p>\n          <div className=\"counter-item__actions\">\n            <button\n              type=\"button\"\n              className=\"btn-circle counter-item__button\"\n              disabled={disabled}\n              onClick={e => onDecrease(data.id)}\n            >\n              <MdRemove />\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn-circle counter-item__button\"\n              disabled={disabled}\n              onClick={e => onIncrease(data.id)}\n            >\n              <MdAdd />\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn-circle counter-item__button\"\n              disabled={disabled}\n              onClick={e => onRemove(data.id)}\n            >\n              <MdDeleteForever />\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CounterItem;","import React from 'react';\nimport './style.scss';\n\nclass CounterFilter extends React.Component {\n  render() {\n    const { filterValue, onChange, rule } = this.props;\n\n    return (\n      <div className=\"counter-filter\">\n        <form action=\"#\" className=\"counter-filter__inner\">\n          <label htmlFor=\"filterValue\">{rule.title}</label>\n          <input type=\"text\" name=\"filterValue\" id=\"filterValue\" value={filterValue} onChange={onChange}/>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default CounterFilter;","import React from 'react';\nimport CounterItem from '../counter-item';\nimport CounterFilter from '../counter-filter';\nimport classNames from 'classnames';\nimport { MdFilterList, MdAdd, MdArrowDropDown } from 'react-icons/md';\nimport './style.scss';\n\nclass CounterList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filterValue: '',\n      filterRules: [\n        {\n          title: 'Nombre',\n          value: 'title',\n        },\n        {\n          title: 'Menores a',\n          value: 'min',\n        },\n        {\n          title: 'Mayores a',\n          value: 'max',\n        }\n      ],\n      indexRule: 0,\n      activeToggle: false,\n    };\n  }\n\n  handleChange = e => {\n    this.setState({filterValue: e.target.value})\n  }\n\n  handleChangeFiltrerRule(index) {\n    this.setState({\n      indexRule: index,\n      activeToggle: false,\n      filterValue: '',\n    })\n  }\n\n  getTotalCounts = () => {\n    let total = 0;\n    this.getFilteredData().forEach(item => {\n      total += item.count;\n    });\n    return total;\n  }\n\n  getFilteredData = () => {\n    const { filterValue, filterRules, indexRule } = this.state;\n    const { data } = this.props.countersState;\n    const rule = filterRules[indexRule].value;\n\n    if (rule === 'title') {\n      return data.filter(item => item.title.indexOf(filterValue) >= 0);\n    }\n    \n    if (rule === 'min' && parseInt(filterValue, 10)) {\n      return data.filter(item => item.count < parseInt(filterValue, 10));\n    }\n    \n    if (rule === 'max' && parseInt(filterValue, 10)) {\n      return data.filter(item => item.count > parseInt(filterValue, 10));\n    }\n\n    return data;\n  }\n\n  render() {\n    const { filterValue, filterRules, indexRule, activeToggle } = this.state;\n    const { countersState, onAdd, onOrder, onDecreaseItem, onIncreaseItem, onRemoveItem } = this.props;\n    const { isLoading, orderBy } = countersState;\n\n    return (\n      <div className=\"counter-list\">\n        <div className=\"counter-list__top-bar\">\n          <div className=\"counter-list__top-bar__title\">\n            <h2>Contadores</h2>\n            <button className=\"btn-circle\" onClick={onAdd}>\n              <MdAdd />\n            </button>\n          </div>\n          <div className=\"counter-list__top-bar__filter\">\n            <CounterFilter\n              rule={filterRules[indexRule]}\n              searchPhrase={filterValue}\n              onChange={this.handleChange}\n            />\n            <div className={classNames('counter-list__toggle-filter', { 'counter-list__toggle-filter--active': activeToggle })}>\n              <button\n                type=\"button\"\n                className=\"btn-circle counter-list__toggle-filter__button\"\n                onClick={e => this.setState({activeToggle: !activeToggle})}\n              >\n                <MdFilterList />\n              </button>\n              <ul className=\"counter-list__toggle-filter__options\">\n                {filterRules.map((rule, index) => (\n                  <li className=\"counter-list__toggle-filter__item\" key={index}>\n                    <button type=\"button\" onClick={e => this.handleChangeFiltrerRule(index)}>{rule.title}</button>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        </div>\n        <div className=\"counter-list__header\">\n          <button\n            type=\"button\"\n            className={classNames({'active': orderBy === 'title'})}\n            onClick={e => onOrder()}\n          >\n            Nombre\n            {orderBy === 'title' && <MdArrowDropDown />}\n          </button>\n          <button\n            type=\"button\"\n            className={classNames({'active': orderBy === 'count'})}\n            onClick={e => onOrder('count')}\n          >\n            Cantidad\n            {orderBy === 'count' && <MdArrowDropDown />}\n          </button>\n        </div>\n        <ul className=\"counter-list__body\">\n          {this.getFilteredData().map(item => (\n            <li className=\"counter-list__item\" key={item.id}>\n              <CounterItem\n                data={item}\n                disabled={isLoading}\n                onDecrease={onDecreaseItem}\n                onIncrease={onIncreaseItem}\n                onRemove={onRemoveItem}\n              ></CounterItem>\n            </li>\n          ))}\n        </ul>\n        <div className=\"counter-list__footer\">\n          <h4 className=\"counter-list__total\">Total {this.getTotalCounts()}</h4>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default CounterList;","import React from 'react';\nimport { connect } from 'react-redux';\nimport Modal from 'simple-react-modal';\nimport {\n  getCounters,\n  addCounter,\n  removeCounter,\n  setCounter,\n  setOrder\n} from '../../store/actions/counters';\nimport CounterAddForm from '../../components/counter-add-form';\nimport CounterList from '../../components/counter-list';\nimport './style.scss';\n\nclass Body extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      openForm: false,\n    }\n\n    this.props.dispatch(getCounters());\n  }\n\n  handleAddCounter = title => {\n    this.props.dispatch(addCounter(title));\n    this.handleCloseForm();\n  }\n\n  handleIncrease = id => {\n    this.props.dispatch(setCounter(id, 'increase'))\n  }\n\n  handleDecrease = id => {\n    this.props.dispatch(setCounter(id, 'decrease'))\n  }\n\n  handleRemove = id => {\n    this.props.dispatch(removeCounter(id))\n  }\n\n  handleOrderBy = (type = 'title') => {\n    this.props.dispatch(setOrder(type))\n  }\n\n  handleOpenForm = () => {\n    this.setState({'openForm': true});\n  }\n\n  handleCloseForm = () => {\n    this.setState({'openForm': false});\n  }\n\n  render() {\n    const { counters } = this.props;\n    const { openForm } = this.state;\n\n    return (\n      <div className=\"body\">\n        <div className=\"body__inner\">\n          <Modal show={openForm} onClose={this.handleCloseForm} containerClassName=\"body__modal\">\n            <CounterAddForm onSubmit={this.handleAddCounter} />\n          </Modal>\n          <CounterList\n            countersState={counters}\n            onAdd={this.handleOpenForm}\n            onOrder={this.handleOrderBy}\n            onDecreaseItem={this.handleDecrease}\n            onIncreaseItem={this.handleIncrease}\n            onRemoveItem={this.handleRemove}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  counters: state.counters,\n});\n\nexport default connect(mapStateToProps)(Body);","import React from 'react';\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { logger } from 'redux-logger';\nimport reducers from '../store/reducers';\nimport Body from '../containers/body';\nimport './style.scss';\n\nlet store = createStore(\n  reducers,\n  applyMiddleware(\n    thunk,\n    logger,\n  ),\n);\n\nfunction Root() {\n  return (\n    <Provider store={store}>\n      <div className=\"root\">\n        <Body />\n      </div>\n    </Provider>\n  );\n}\n\nexport default Root;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}